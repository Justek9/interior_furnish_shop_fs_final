generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id String @id @default(uuid())
  name String
  price Int
  description String
  isNew Boolean
  category String
  imgs ProductImgs[]
 }

model ProductImgs {
  id String @id @default(uuid())
  photo String
  product Product @relation(fields:[productId], references: [id])
  productId String
}

enum Role {
  USER
  ADMIN
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  role     Role      @default(USER)
  password Password?
}

model Password {
  id       String @id @default(uuid())
  hashedPassword String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String @unique
}

model OrderProducts {
  id String @id @default(uuid())
  price Int
  qty Int
  name String
  remarks String
  orders ProductsOnOrders[]
}


model Order {
  id String @id @default(uuid())
  products ProductsOnOrders[]
  address String @default("")
  orderRemarks String
  shippingCost Int
  createdAt DateTime @default(now())
  discount Int @default(0)
}

model ProductsOnOrders {
  order Order @relation(fields: [orderId], references: [id])
  orderId String // relation scalar field (used in the `@relation` attribute above)
  product OrderProducts@relation(fields: [productId], references: [id])
  productId String // relation scalar field (used in the `@relation` attribute above)
  @@id([orderId, productId])
}